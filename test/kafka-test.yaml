apiVersion: v1
kind: Service
metadata:
  labels:
    app: kafka-broker
  name: kafka-service
  namespace: kafka
spec:
  ports:
    - port: 9092
  selector:
    app: kafka-broker
# ---
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: kafka-config
#   namespace: kafka
# data:
#   server.properties.tmpl: |
#     # Content of server.properties.tmpl
#     # Other configurations
#     broker.id=${BROKER_ID}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: kafka
spec:
  serviceName: "kafka-service"
  replicas: 3
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      initContainers:
      - name: init-config
        image: busybox
        command: ["sh", "-c"]
        args:
        - |
          set -e
          echo "broker.id=${BROKER_ID}" > /config/server.properties
          BROKER_ID=$(echo $(hostname) | awk -F '-' '{print $NF}')
          sed -i "s/\${BROKER_ID}/$BROKER_ID/g" /config/server.properties
          
        volumeMounts:
        - name: config
          mountPath: /config
      containers:
      - name: kafka-broker
        image: wurstmeister/kafka
        env:
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zookeeper-service:2181
        - name: KAFKA_LISTENERS
          value: PLAINTEXT://:9092
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "PLAINTEXT://$(POD_NAME).kafka-service.default.svc.cluster.local:9092"
        - name: KAFKA_CREATE_TOPICS
          value: "email:3:1,sms:3:1,push:3:1,action:3:1,system:3:1"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        volumeMounts:
        - name: config
          mountPath: /config
        ports:
          - containerPort: 9092
      volumes:
      - name: config
        emptyDir: {}

# apiVersion: apps/v1
# kind: StatefulSet
# metadata:
#   labels:
#     app: kafka-broker
#   name: kafka-broker
#   namespace: kafka
# spec:
#   serviceName: kafka-service
#   replicas: 3
#   selector:
#     matchLabels:
#       app: kafka-broker
#   template:
#     metadata:
#       labels:
#         app: kafka-broker
#     spec:
#       hostname: kafka-broker
#       containers:
#         - env:
#           - name: KAFKA_BROKER_ID
#             value: "${POD_INDEX}"
#           - name: KAFKA_ZOOKEEPER_CONNECT
#             value: zookeeper-service:2181
#           - name: KAFKA_LISTENERS
#             value: PLAINTEXT://:9092
#           - name: KAFKA_ADVERTISED_LISTENERS
#             value: "PLAINTEXT://$(POD_NAME).kafka.svc.cluster.local:9092"
#           - name: POD_NAME
#             valueFrom:
#               fieldRef:
#                 fieldPath: metadata.name
#           - name: KAFKA_CREATE_TOPICS
#             value: "email:3:1,sms:3:1,push:3:1,action:3:1,system:3:1"
#           image: wurstmeister/kafka:latest
#           name: kafka-broker
#           ports:
#             - containerPort: 9092